<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- setiings:控制mybatis全局行为-->
    <settings>
        <!-- 设置mybatis输出日志,打印到控制台上-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
    <!--  环境:数据库的连接信息
        default:必须和某个environment的id值一样
        告诉mybatis使用哪个数据库的连接信息,就是访问哪个数据库-->
    <environments default="development">
        <!--   environment:一个数据库信息的配置,环境
             id:一个唯一值,自定义,表示环境的名称-->
        <environment id="development">
        <!--      transactionManager:mybatis的事务类型
              type:JDBC(表示使用jdbc中的Connection对象的commit,rollback做事务处理)
              MANAGED:把mybatis的事务处理委托给其他的容器(一个服务器软件,一个框架(spring))-->
            <transactionManager type="JDBC"/>
            <!--   dataSource:表示数据源,连接数据库的
                     type:表示数据的类型,POOLED表示连接池-->
            <dataSource type="POOLED">
                <!-- drive,user,username,password是固定的,不能自定义-->
                <!-- 数据库驱动类名-->
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <!-- 连接数据库的url字符串-->
                <property name="url" value="jdbc:mysql://localhost:3306/test?useSSL=FALSE&amp;serverTimezone=UTC"/>
                <!-- 访问数据库的用户名-->
                <property name="username" value="root"/>
                <!--  密码-->
                <property name="password" value="521333"/>
            </dataSource>
        </environment>
    </environments>
    <!-- sql mapper(sql映射文件)的位置 -->
    <mappers>
        <!--一个mapper标签指定一个文件的位置
        从类路径开始的路径信息 target/classes(类路径)-->
        <mapper resource="org\example\test\dao\StudentDao.xml"/>
    </mappers>
</configuration>
<!--
    mybatis的配置文件:主要定义了数据库的配置文件,sql映射文件的位置
    1.约束文件
    <!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

        mybatis-3-config.dtd
-->