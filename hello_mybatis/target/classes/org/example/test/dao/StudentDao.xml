<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.test.dao.StudentDao">
    <!--
     select:表示查询操作
     id:你要执行的sql语法的唯一表示,nybatis会使用这个id的值来找到要执行的sql语句
        可以自定义,但是要求你使用接口的方法名称
     resultType:表示结果类型,是sql语句执行后得到的ResultSet,遍历这个ResultSet得到java对象的类型
                值是类型的全限定名称
     -->
    <select id="findAll" resultType="org.example.test.domain.Student">
    select * from student
    </select>
    <select id="findById" resultType="org.example.test.domain.Student">
    select #{id} from student
    </select>
    
    <insert id="save" >
        insert into student values (#{id}, #{name}, #{age})
    </insert>
    <update id="update">
    update student set name = #{name},age = #{age} where id = #{id}
    </update>
    <delete id="delete">
    delete from student where id = #{id}
    </delete>

</mapper>
<!--
    sql映射文件:写sql语句的,mybatis会执行这些sql
    1.指定约束文件
    <!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    mybatis-3-mapper.dtd是约束文件的名称,扩展名是dtd的
    2.约束文件作用:限制,检查在当前文件中出现的标签,属性必须符合mybatis的要求

    3.mapper是当前文件的根标签,必须的
    namespace:命名空间,唯一值的,可以自定义的字符串
            要求你使用dao接口的全限定名称

    4.在当前文件中,可以使用特定的标签,表示数据库的特定操作
        <select>:表示执行查询
        <update>:表示更新数据库的操作,就是在<upgrade>标签中写的是update sql语句
        <insert>:表示插入,放的是insert语句
        <delete>:表示删除,执行的是删除语句

-->